{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/signin/signin.component.css","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/components/developers/developer-edit/developer-edit.component.css","webpack:///./src/app/components/developers/developer-edit/developer-edit.component.html","webpack:///./src/app/components/developers/developer-edit/developer-edit.component.ts","webpack:///./src/app/components/developers/developers.component.html","webpack:///./src/app/components/developers/developers.component.ts","webpack:///./src/app/components/games/games-edit/games-edit.component.css","webpack:///./src/app/components/games/games-edit/games-edit.component.html","webpack:///./src/app/components/games/games-edit/games-edit.component.ts","webpack:///./src/app/components/games/games.component.html","webpack:///./src/app/components/games/games.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/logged-in.gaurd.ts","webpack:///./src/app/models/developers.model.ts","webpack:///./src/app/models/games.model.ts","webpack:///./src/app/models/login.model.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/services/developers.service.ts","webpack:///./src/app/services/games.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/register.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-games-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { Observable, Subject, ReplaySubject, from, of, range } from 'rxjs';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgbPaginationModule, NgbAlertModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { GamesComponent } from './components/games/games.component';\nimport { DevelopersComponent } from './components/developers/developers.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { GameService } from './services/games.service';\nimport { DeveloperService } from './services/developers.service'\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GameEditComponent } from './components/games/games-edit/games-edit.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/signin/signin.component'\nimport { RegisterService } from './services/register.service';\nimport { LoginService } from './services/login.service';\nimport { DeveloperEditComponent } from './components/developers/developer-edit/developer-edit.component';\nimport { LoggedInGuard } from './logged-in.gaurd';\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'games', component: GamesComponent},\n  {path:'developers',component: DevelopersComponent},\n  {path: 'signup', component : SignupComponent},\n  {path: 'login', component: LoginComponent}, //, canActivate:[LoggedInGuard]\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    GamesComponent,\n    DevelopersComponent,\n    HomeComponent,\n    GameEditComponent,\n    SignupComponent,\n    LoginComponent,\n    DeveloperEditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgbPaginationModule, \n    NgbAlertModule\n  ],\n  providers: [\n    GameService,\n    DeveloperService,\n    RegisterService,\n    LoginService,\n    LoggedInGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbmluL3NpZ25pbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n    <form (ngSubmit)=\\\"onLogin(f)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"username\\\" id=\\\"username\\\" name =\\\"username\\\" ngModel class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" id=\\\"password\\\" name =\\\"password\\\" ngModel class=\\\"form-control\\\">\\n      </div>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Sign In</button>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/models/user.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Login } from 'src/app/models/login.model';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild(\"f\") userForm: NgForm;\n  id: number;\n  editMode = false;\n  // concertsForm: FormGroup;\n  subscription: Subscription;\n  editedItemId: number;\n  editedItem: User;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit() {\n    this.subscription = this.loginService.startedEditing\n      .subscribe(\n        (id: number) => {\n\n          this.editedItemId = id;\n\n          this.editMode = true;\n\n        });\n  }\n\n  onLogin(form: NgForm) {\n    const value = form.value;\n    const login = new Login(value.username, value.password)\n    this.loginService.loginUser(login).subscribe(() => {\n      this.router.navigate(['/'])\n    });\n  }\n}\n","module.exports = \"input.ng-invalid.ng-touched,\\ntextarea.ng-invalid.ng-touched{\\n    border-left: 5px solid #a94442; /* red */\\n}\\ninput.ng-valid.ng-touched,\\ntextarea.ng-invalid.ng-touched{\\n    border-left: 5px solid #42A948; /* green */\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksK0JBQStCLENBQUMsU0FBUztDQUM1QztBQUNEOztJQUVJLCtCQUErQixDQUFDLFdBQVc7Q0FDOUMiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCxcbnRleHRhcmVhLm5nLWludmFsaWQubmctdG91Y2hlZHtcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNhOTQ0NDI7IC8qIHJlZCAqL1xufVxuaW5wdXQubmctdmFsaWQubmctdG91Y2hlZCxcbnRleHRhcmVhLm5nLWludmFsaWQubmctdG91Y2hlZHtcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0MkE5NDg7IC8qIGdyZWVuICovXG59Il19 */\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n    <form (ngSubmit)=\\\"onSignup(f)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"username\\\" id=\\\"username\\\" name =\\\"username\\\" ngModel required class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" id=\\\"password\\\" name =\\\"password\\\" ngModel required class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstname\\\">Firstname</label>\\n        <input type=\\\"firstname\\\" id=\\\"firstname\\\" name =\\\"firstname\\\" ngModel required class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastname\\\">Lastname</label>\\n        <input type=\\\"lastname\\\" id=\\\"lastname\\\" name =\\\"lastname\\\" ngModel required class=\\\"form-control\\\">\\n      </div>\\n      <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Sign Up</button>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\">Clear</button>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { RegisterService } from '../../services/register.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  @ViewChild(\"f\") userForm: NgForm;\n  id: number;\n  editMode = false;\n  // concertsForm: FormGroup;\n  subscription: Subscription;\n  editedItemId: number;\n  editedItem: User;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private registerService: RegisterService\n  ) { }\n\n  ngOnInit() {\n    this.subscription = this.registerService.startedEditing\n      .subscribe(\n        (id: number) => {\n\n          this.editedItemId = id;\n\n          this.editMode = true;\n\n        });\n  }\n\n  onSignup(form: NgForm) {\n    const value = form.value;\n    const newUser = new User(value.username, value.password, value.firstname, value.lastname);\n    this.registerService.addUser(newUser);\n    this.editMode = false;\n    form.reset();\n  }\n\n  onClear(){\n    this.userForm.reset();\n    this.editMode = false;\n  }\n}\n","module.exports = \"input.ng-invalid.ng-touched,\\ntextarea.ng-invalid.ng-touched{\\n    border-left: 5px solid #a94442; /* red */\\n}\\ninput.ng-valid.ng-touched,\\ntextarea.ng-invalid.ng-touched{\\n    border-left: 5px solid #42A948; /* green */\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kZXZlbG9wZXJzL2RldmVsb3Blci1lZGl0L2RldmVsb3Blci1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksK0JBQStCLENBQUMsU0FBUztDQUM1QztBQUNEOztJQUVJLCtCQUErQixDQUFDLFdBQVc7Q0FDOUMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RldmVsb3BlcnMvZGV2ZWxvcGVyLWVkaXQvZGV2ZWxvcGVyLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCxcbnRleHRhcmVhLm5nLWludmFsaWQubmctdG91Y2hlZHtcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNhOTQ0NDI7IC8qIHJlZCAqL1xufVxuaW5wdXQubmctdmFsaWQubmctdG91Y2hlZCxcbnRleHRhcmVhLm5nLWludmFsaWQubmctdG91Y2hlZHtcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0MkE5NDg7IC8qIGdyZWVuICovXG59Il19 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6 form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" name=\\\"name\\\" ngModel required>\\n          </div>\\n          <div class=\\\"col-sm-6 form-group\\\">\\n            <label for=\\\"age\\\">Age</label>\\n            <input type=\\\"number\\\" id=\\\"age\\\" class=\\\"form-control\\\" name=\\\"age\\\" ngModel required>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 form-group\\\">\\n            <label for=\\\"games\\\">Games</label>\\n            <input type=\\\"text\\\" id=\\\"games\\\" class=\\\"form-control\\\" name=\\\"games\\\" ngModel required>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">{{ editMode ? 'update' : 'Add' }}</button>\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onDelete()\\\" *ngIf=\\\"editMode\\\">Delete</button>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\">Clear</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Developer } from 'src/app/models/developers.model';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Game } from 'src/app/models/games.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { GameService } from 'src/app/services/games.service';\nimport { DeveloperService } from 'src/app/services/developers.service';\n\n@Component({\n  selector: 'app-developer-edit',\n  templateUrl: './developer-edit.component.html',\n  styleUrls: ['./developer-edit.component.css']\n})\nexport class DeveloperEditComponent implements OnInit {\n\n  developers: Developer[] = [\n  ];\n\n  @ViewChild(\"f\") developerForm: NgForm;\n  id: number;\n  editMode = false;\n  // concertsForm: FormGroup;\n  subscription: Subscription;\n  editedItemId: number;\n  editedItem: Developer;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private gameService: GameService,\n    private developerService: DeveloperService\n  ) { }\n\n  ngOnInit() {\n    // this.developerService.getDevelopers()\n    //   .then((developers) => {\n    //     this.developers = developers\n    //   }\n    //   );\n    this.subscription = this.developerService.startedEditing\n      .subscribe(\n        (id: number) => {\n\n          this.editedItemId = id;\n\n          this.editMode = true;\n\n          this.developerService.getDeveloper(id)\n            .then(developers => {\n              this.editedItem = developers\n              this.developerForm.setValue({\n                name: this.editedItem.name,\n                age: this.editedItem.age,\n                games: this.editedItem.games\n              })\n            })\n            .catch(error => console.log(error));\n        });\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newDeveloper = new Developer(value.name, value.age, value.games);\n    if (this.editMode) {\n      this.developerService.updateDevelopers(this.editedItemId, newDeveloper);\n    } else {\n      this.developerService.addDeveloper(newDeveloper);\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onDelete() {\n    this.developerService.deleteDeveloper(this.editedItemId);\n    this.onClear();\n  }\n\n  onClear() {\n    this.developerForm.reset();\n    this.editMode = false;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  onEditItem(id: number) {\n    console.log(\"dit id klik je aan : \" + id);\n    this.developerService.startedEditing.next(id);\n  }\n}\n","module.exports = \"<app-header></app-header>\\n<div class=\\\"row text-center\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>Welkom op de developers page! Hier is een overzicht te zien van alle developers en hun gemaakte games.\\n      De games zijn te bekijken door op de developer te klikken!</h1><br>\\n    <hr class=\\\"style13\\\">\\n  </div>\\n</div>\\n<div class=\\\"row text-center\\\">\\n  <ng-template [ngIf]=\\\"!loginService.isAuth()\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"panel panel-default list-group-item\\\" style=\\\"cursor: pointer\\\" *ngFor=\\\"let developer of developers; let i = index\\\"\\n        (click)=\\\"onEditItem(i)\\\">\\n        <table class=\\\"table\\\">\\n          <tr>\\n            <th class=\\\"text-center\\\">Name</th>\\n            <th class=\\\"text-center\\\">Age</th>\\n            <th class=\\\"text-center\\\">Games</th>\\n          </tr>\\n          <tr>\\n            <td>{{ developer.name }}</td>\\n            <td>{{ developer.age }}</td>\\n            <td>{{ developer.games.name }}</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-template [ngIf]=\\\"loginService.isAuth()\\\">\\n    <div class=\\\"col-xs-4\\\">\\n      <div class=\\\"panel panel-default list-group-item\\\" style=\\\"cursor: pointer\\\" *ngFor=\\\"let developer of developers; let i = index\\\"\\n        (click)=\\\"onEditItem(i)\\\">\\n        <table class=\\\"table\\\">\\n          <tr>\\n            <th class=\\\"text-center\\\">Name</th>\\n            <th class=\\\"text-center\\\">Age</th>\\n            <th class=\\\"text-center\\\">Games</th>\\n          </tr>\\n          <tr>\\n            <td>{{ developer.name }}</td>\\n            <td>{{ developer.age }}</td>\\n            <td>{{ developer.games.name }}</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"col-xs-8\\\">\\n    <ng-template [ngIf]=\\\"loginService.isAuth()\\\">\\n      <app-developer-edit></app-developer-edit>\\n    </ng-template>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Developer } from '../../models/developers.model'\nimport { DeveloperService } from '../../services/developers.service'\nimport { Subscription } from 'rxjs';\nimport { LoginService } from '../../services/login.service';\nimport { Game } from 'src/app/models/games.model';\n\n@Component({\n  selector: 'app-developers',\n  templateUrl: './developers.component.html'\n})\nexport class DevelopersComponent implements OnInit {\n  developers: Developer[] = [\n  ];\n  id: number;\n  subscription: Subscription\n\n  constructor(\n    private developersService: DeveloperService,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit() {\n    this.developersService.getDevelopers()\n      .then((developers) => {\n        this.developers = developers\n      }\n      );\n    this.subscription = this.developersService.developersChanged\n      .subscribe(\n        (developers: Developer[]) => {\n          this.developers = developers;\n        }\n      );\n  }\n  onEditItem(id: number) {\n    console.log(\"dit id klik je aan : \" + id);\n    this.developersService.startedEditing.next(id);\n  }\n}","module.exports = \"input.ng-invalid.ng-touched,\\ntextarea.ng-invalid.ng-touched{\\n    border-left: 5px solid #a94442; /* red */\\n}\\ninput.ng-valid.ng-touched,\\ntextarea.ng-invalid.ng-touched{\\n    border-left: 5px solid #42A948; /* green */\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9nYW1lcy9nYW1lcy1lZGl0L2dhbWVzLWVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSwrQkFBK0IsQ0FBQyxTQUFTO0NBQzVDO0FBQ0Q7O0lBRUksK0JBQStCLENBQUMsV0FBVztDQUM5QyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZ2FtZXMvZ2FtZXMtZWRpdC9nYW1lcy1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQsXG50ZXh0YXJlYS5uZy1pbnZhbGlkLm5nLXRvdWNoZWR7XG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjYTk0NDQyOyAvKiByZWQgKi9cbn1cbmlucHV0Lm5nLXZhbGlkLm5nLXRvdWNoZWQsXG50ZXh0YXJlYS5uZy1pbnZhbGlkLm5nLXRvdWNoZWR7XG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNDJBOTQ4OyAvKiBncmVlbiAqL1xufSJdfQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6 form-group\\\">\\n          <label for=\\\"imageUrl\\\">Image</label>\\n          <input type=\\\"text\\\" id=\\\"imageUrl\\\" class=\\\"form-control\\\" name=\\\"imageUrl\\\" ngModel required>\\n        </div>\\n        <div class=\\\"col-sm-6 form-group\\\">\\n          <label for=\\\"name\\\">naam</label>\\n          <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" name=\\\"name\\\" ngModel required>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6 form-group\\\">\\n          <label for=\\\"releaseDate\\\">ReleaseDate</label>\\n          <input type=\\\"text\\\" id=\\\"releaseDate\\\" class=\\\"form-control\\\" name=\\\"releaseDate\\\" ngModel required>\\n        </div>\\n        <div class=\\\"col-sm-6 form-group\\\">\\n          <label for=\\\"genre\\\">Genre</label>\\n          <input type=\\\"text\\\" id=\\\"genre\\\" class=\\\"form-control\\\" name=\\\"genre\\\" ngModel required>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8 form-group\\\">\\n          <label for=\\\"description\\\">Description</label>\\n          <input type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control\\\" name=\\\"description\\\" ngModel required>\\n        </div>\\n        <div class=\\\"col-sm-4 form-group\\\" *ngIf=\\\"!editMode\\\">\\n          <label for=\\\"developer\\\">Developer</label>\\n          <select type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"developer\\\" name=\\\"developer\\\" ngModel required>\\n            <option *ngFor=\\\"let developer of developers\\\">{{developer._id}}</option> \\n            \\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-4 form-group\\\" *ngIf=\\\"editMode\\\">\\n          <label>Developer</label>\\n          <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"developer\\\" name=\\\"developer\\\" ngModel required>\\n          <!-- <p>{{name}}</p> -->\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">{{ editMode ? 'update' : 'Add' }}</button>\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onDelete()\\\" *ngIf=\\\"editMode\\\">Delete</button>\\n          <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<!-- <label for=\\\"developer\\\">Developer</label> -->\\n        <!-- <input type=\\\"search\\\" id=\\\"developer\\\" class=\\\"form-control\\\" name=\\\"developer\\\" ngModel required> -->\\n        <!-- <ul class=\\\"list-group\\\">\\n                <a\\n                class=\\\"list-group-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"let developer of developers; let i = index\\\"\\n                (click)=\\\"onEditItem(i)\\\"\\n              >\\n              <input type=\\\"object\\\" id=\\\"developer\\\" class=\\\"form-control\\\" name=\\\"developer\\\" ngModel required>\\n              <label>Developer:</label> {{ developer.name}}\\n              </a>\\n            </ul> -->\"","import { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Component, OnInit, ElementRef, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { GameService } from '../../../services/games.service';\nimport { Subscription } from 'rxjs';\nimport { Game } from '../../../models/games.model';\nimport { Developer } from '../../../models/developers.model';\nimport { DeveloperService } from '../../../services/developers.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-game-edit',\n  templateUrl: './games-edit.component.html',\n  styleUrls: ['./games-edit.component.css']\n})\nexport class GameEditComponent implements OnInit {\n  developers: Developer[] = [\n  ];\n\n  @ViewChild(\"f\") gameForm: NgForm;\n  id: number;\n  editMode = false;\n  // concertsForm: FormGroup;\n  subscription: Subscription;\n  editedItemId: number;\n  editedItem: Game;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private gameService: GameService,\n    private developerService: DeveloperService\n  ) { }\n\n  ngOnInit() {\n    this.developerService.getDevelopers()\n      .then((developers) => {\n        this.developers = developers\n      }\n      );\n    this.subscription = this.gameService.startedEditing\n      .subscribe(\n        (id: number) => {\n\n          this.editedItemId = id;\n\n          this.editMode = true;\n\n          this.gameService.getGame(id)\n            .then(games => {\n              this.editedItem = games\n              this.gameForm.setValue({\n                imageUrl: this.editedItem.imageUrl,\n                name: this.editedItem.name,\n                releaseDate: this.editedItem.releaseDate,\n                genre: this.editedItem.genre,\n                description: this.editedItem.description,\n                developer: this.editedItem.developer\n              })\n            })\n            .catch(error => console.log(error));\n        });\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newGame = new Game(value.imageUrl, value.name, value.releaseDate, value.genre, value.description, value.developer);\n    if (this.editMode) {\n      this.gameService.updateGames(this.editedItemId, newGame);\n    } else {\n      this.gameService.addGame(newGame);\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onDelete() {\n    this.gameService.deleteGame(this.editedItemId);\n    this.onClear();\n  }\n\n  onClear() {\n    this.gameForm.reset();\n    this.editMode = false;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  onEditItem(id: number) {\n    console.log(\"dit id klik je aan : \" + id);\n    this.developerService.startedEditing.next(id);\n  }\n}","module.exports = \"<app-header></app-header>\\n<div class=\\\"row text-left\\\">\\n  <ng-template [ngIf]=\\\"!loginService.isAuth()\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <ul class=\\\"list-group\\\">\\n        <a class=\\\"list-group-item\\\" style=\\\"cursor: pointer\\\" *ngFor=\\\"let game of games; let i = index\\\" (click)=\\\"onEditItem(i)\\\">\\n          <img [src]=\\\"game.imageUrl\\\" alt=\\\"{{ game.imageUrl }}\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 100px; max-width: 150px\\\">\\n          <label>Naam:</label> {{ game.name }} <br>\\n          <label>ReleaseDate:</label> {{game.releaseDate}} <br>\\n          <label>Genre:</label> {{game.genre}} <br>\\n          <label>Description:</label> {{game.description}} <br>\\n          <label>Developer:</label> {{game.developer._id}}\\n        </a>\\n      </ul>\\n    </div>\\n  </ng-template>\\n  <ng-template [ngIf]=\\\"loginService.isAuth()\\\">\\n      <div class=\\\"col-xs-6\\\">\\n          <ul class=\\\"list-group\\\">\\n            <a class=\\\"list-group-item\\\" style=\\\"cursor: pointer\\\" *ngFor=\\\"let game of games; let i = index\\\" (click)=\\\"onEditItem(i)\\\">\\n              <img [src]=\\\"game.imageUrl\\\" alt=\\\"{{ game.imageUrl }}\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 100px; max-width: 150px\\\">\\n              <label>Naam:</label> {{ game.name }} <br>\\n              <label>ReleaseDate:</label> {{game.releaseDate}} <br>\\n              <label>Genre:</label> {{game.genre}} <br>\\n              <label>Description:</label> {{game.description}} <br>\\n              <label>Developer:</label> {{game.developer._id}}\\n            </a>\\n          </ul>\\n        </div>\\n  </ng-template>\\n  <div class=\\\"col-xs-6\\\">\\n    <ng-template [ngIf]=\\\"loginService.isAuth()\\\">\\n      <app-game-edit></app-game-edit>\\n    </ng-template>\\n  </div>\\n</div>\"","import { Component, OnInit,Input,Output } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport {Game} from '../../models/games.model'\nimport {GameService} from '../../services/games.service'\nimport { Subscription } from 'rxjs';\nimport { Developer } from 'src/app/models/developers.model';\nimport { LoginService } from '../../services/login.service';\n\n@Component({\n  selector: 'app-games',\n  templateUrl: './games.component.html'\n})\nexport class GamesComponent implements OnInit{\n    games : Game[] = [\n    ];\n    id:number;\n    subscription: Subscription\n\n    constructor(\n      private gamesService: GameService,\n      private loginService: LoginService\n    ){}\n\n    ngOnInit(){\n      this.gamesService.getGames()\n      .then((games) => {\n        this.games = games\n      }\n    );\n    this.subscription = this.gamesService.gamesChanged\n    .subscribe(\n      (games: Game[]) => {\n        this.games = games;\n      }\n    );\n    }\n    onEditItem(id:number){\n      console.log(\"dit id klik je aan : \" + id);\n      this.gamesService.startedEditing.next(id);\n    }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" (click)=\\\"toggleState()\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\">Games</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\" [ngClass]=\\\"{ 'in': isIn }\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li routerLinkActive='active'><a routerLink='/'>Home</a></li>\\n                <li routerLinkActive='active'><a routerLink='/games'>Games</a></li>\\n                <li routerLinkActive='active'><a routerLink='/developers'>Developers</a></li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <ng-template [ngIf]=\\\"!loginService.isAuth()\\\">\\n                    <li routerLinkActive='active'><a routerLink='/login'>Log In</a></li>\\n                    <li routerLinkActive='active'><a routerLink='/signup'>Register</a></li>\\n                </ng-template>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <ng-template [ngIf]=\\\"loginService.isAuth()\\\">\\n                <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onLogout()\\\">Log out</a></li>\\n            </ng-template>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../services/login.service'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private loginService : LoginService) { }\n\n  ngOnInit() {\n  }\n  \n  onLogout(){\n    this.loginService.signOut();\n  }\n}\n","module.exports = \"#WelkomTekst{\\n    font-family: American Typewriter, serif;\\n}\\n\\nlabel{\\n    max-width: 70%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdDQUF3QztDQUMzQzs7QUFFRDtJQUNJLGVBQWU7Q0FDbEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI1dlbGtvbVRla3N0e1xuICAgIGZvbnQtZmFtaWx5OiBBbWVyaWNhbiBUeXBld3JpdGVyLCBzZXJpZjtcbn1cblxubGFiZWx7XG4gICAgbWF4LXdpZHRoOiA3MCU7XG59Il19 */\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row text-center\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1 id=\\\"WelkomTekst\\\">Welcome to our game website!</h1>\\n    <br>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-6 text-center\\\">\\n    <label>Take a look at our collection of games! All games are linked to their developer and genre.</label>\\n  </div>\\n  <div class=\\\"col-xs-6 text-center\\\">\\n    <label>Take a look at our developers, each developer has at least developt one game. You can search for a specific\\n      game or developer in the search area.</label>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-6 text-center\\\">\\n    <a routerLink='/games'><button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg btn-block\\\">Games</button></a>\\n  </div>\\n  <div class=\\\"col-xs-6 text-center\\\">\\n    <a routerLink='/developers'><button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg btn-block\\\">Developer</button></a>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../app/services/login.service'\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class LoggedInGuard implements CanActivate {\n\n    constructor(private loginService: LoginService) { }\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        const is = this.loginService.isAuth()\n        console.log(is)\n        return is\n    }\n}\n","import { NumberValueAccessor } from \"@angular/forms/src/directives\";\nimport { Game } from \"./games.model\";\n\nexport class Developer {\n    public _id;\n    public name: string;\n    public age : number;\n    public games : Game;\n\n    constructor(name: string, age: number, games: Game) {\n        this.name = name;\n        this.age = age;\n        this.games = games;\n    }\n}","import { Developer } from \"./developers.model\";\n\nexport class Game {\n    public _id;\n    public name: string;\n    public releaseDate: string;\n    public genre: string;\n    public description: string;\n    public imageUrl: string;\n    public developer: Developer;\n\n\n    constructor(imageUrl: string, name: string, releaseDate: string, genre: string, description: string, developer: Developer) {\n        this.name = name;\n        this.releaseDate = releaseDate;\n        this.genre = genre;\n        this.description = description;\n        this.imageUrl = imageUrl;\n        this.developer = developer;\n    }\n}","export class Login{\n    public _id;\n    public username: String;\n    public password: String;\n    \n    constructor(username: string, password: String){\n        this.username = username;\n        this.password = password;\n    }\n}","export class User{\n    public _id;\n    public username: String;\n    public password: String;\n    public firstname: String;\n    public lastname: String;\n\n    constructor(username: string, password: String, firstname: String, lastname: String) {\n        this.username = username;\n        this.password = password;\n        this.firstname = firstname;\n        this.lastname = lastname;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers, URLSearchParams, Response } from '@angular/http';\nimport { environment } from '../../environments/environment';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs'; ///Observable\nimport { Developer } from '../models/developers.model';\nimport { Subject } from 'rxjs'; ///Subject\n\n@Injectable()\nexport class DeveloperService {\n\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n    private serverUrl = environment.serverUrl + '/developer'; // URL to web api\n    private postServerUrl = environment.serverUrl;\n    private developers: Developer[] = [];\n    startedEditing = new Subject<number>();\n    developersChanged = new Subject<Developer[]>();\n\n    //\n    //\n    //\n    constructor(private http: Http) {\n        // this.readDeveloper();\n    }\n\n    //\n    //\n    //\n    public getDevelopers(): Promise<Developer[]> {\n        console.log('Developer ophalen van server');\n        return this.http.get(this.serverUrl, { headers: this.headers })\n            .toPromise()\n            .then(response => {\n                console.dir(response.json());\n                this.developers = response.json() as Developer[];\n                return this.developers\n            })\n            .catch(error => {\n                return this.handleError(error);\n            });\n    }\n\n    public getDeveloper(index: number): Promise<Developer> {\n        console.log('Developer ophalen met id');\n        return this.http.get(this.serverUrl + '/' + this.developers[index]._id, { headers: this.headers })\n            .toPromise()\n            .then(response => {\n                console.dir(response.json());\n                return response.json() as Developer;\n            })\n            .catch(error => {\n                return this.handleError(error);\n            });\n    }\n\n    public updateDevelopers(index: number, newDeveloper : Developer){\n        console.log(\"Developer updaten\");\n        this.http.put(this.serverUrl + \"/\" + this.developers[index]._id, { name: newDeveloper.name, age: newDeveloper.age, games: newDeveloper.games})\n          .toPromise()\n          .then( () => {\n            console.log(\"Developer veranderd\")\n            this.getDevelopers()\n            .then(\n              developers => {\n                this.developers = developers\n                this.developersChanged.next(this.developers.slice());\n              }\n            )\n            .catch(error => console.log(error));\n          })\n          .catch( error => { return this.handleError(error) } );\n      }\n\n    public deleteDeveloper(index: number) {\n        console.log(\"Developer verwijderen\");\n        this.http.delete(this.serverUrl + \"/\" + this.developers[index]._id)\n            .toPromise()\n            .then(() => {\n                console.log(\"developers verwijderd\")\n                this.getDevelopers()\n                    .then(\n                        developers => {\n                            this.developers = developers\n                            this.developersChanged.next(this.developers.slice());\n                        }\n                    )\n                    .catch(error => console.log(error));\n            })\n            .catch(error => { return this.handleError(error) });\n    }\n\n    public addDeveloper(developers: Developer) {\n        console.log('developers opslaan');\n        this.http.post(this.postServerUrl + '/game/'+ developers.games._id +'/developer', {name: developers.name, age: developers.age, games: developers.games})\n            .toPromise()\n            .then(() => {\n                console.log(\"developers toegevoegd\")\n                this.getDevelopers()\n                    .then(\n                        developers => {\n                            this.developers = developers\n                            this.developersChanged.next(this.developers.slice());\n                        }\n                    )\n                    .catch(error => console.log(error));\n            }\n            )\n            .catch(error => { return this.handleError(error) });\n    }\n\n    //\n    //\n    //\n    private handleError(error: any): Promise<any> {\n        console.log('handleError');\n        return Promise.reject(error.message || error);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers, URLSearchParams, Response } from '@angular/http';\nimport { environment } from '../../environments/environment';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs'; ///Observable\nimport { Game } from '../models/games.model';\nimport { Subject } from 'rxjs'; ///Subject;\nimport { Developer } from '../models/developers.model'\n\n@Injectable()\nexport class GameService {\n\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n    private serverUrl = environment.serverUrl + '/game'; // URL to web api\n    private games: Game[] = [];\n    private PostserverUrl = environment.serverUrl; //URL to game post endpoint\n    startedEditing = new Subject<number>();\n    gamesChanged = new Subject<Game[]>();\n\n    //\n    //\n    //\n    constructor(private http: Http) {\n        // this.readGame();\n    }\n\n    //\n    //\n    //\n    public getGames(): Promise<Game[]> {\n        console.log('Game ophalen van server');\n        return this.http.get(this.serverUrl, { headers: this.headers })\n            .toPromise()\n            .then(response => {\n                console.dir(response.json());\n                this.games = response.json() as Game[];\n                return this.games\n            })\n            .catch(error => {\n                return this.handleError(error);\n            });\n    }\n\n    public getGame(index: number): Promise<Game> {\n        console.log('Game ophalen met id');\n        return this.http.get(this.serverUrl + '/' + this.games[index]._id, { headers: this.headers })\n            .toPromise()\n            .then(response => {\n                console.dir(response.json());\n                return response.json() as Game;\n            })\n            .catch(error => {\n                return this.handleError(error);\n            });\n    }\n\n    public updateGames(index: number, newGame: Game) {\n        console.log(\"Game updaten\");\n        this.http.put(this.serverUrl + \"/\" + this.games[index]._id, { imageUrl: newGame.imageUrl, name: newGame.name, releaseDate: newGame.releaseDate, genre: newGame.genre, description: newGame.description, developer: newGame.developer })\n            .toPromise()\n            .then(() => {\n                console.log(\"Game veranderd\")\n                this.getGames()\n                    .then(\n                        games => {\n                            this.games = games\n                            this.gamesChanged.next(this.games.slice());\n                        }\n                    )\n                    .catch(error => console.log(error));\n            })\n            .catch(error => { return this.handleError(error) });\n    }\n\n    public deleteGame(index: number) {\n        console.log(\"Game verwijderen\");\n        this.http.delete(this.serverUrl + \"/\" + this.games[index]._id)\n            .toPromise()\n            .then(() => {\n                console.log(\"game verwijderd\")\n                this.getGames()\n                    .then(\n                        games => {\n                            this.games = games\n                            this.gamesChanged.next(this.games.slice());\n                        }\n                    )\n                    .catch(error => console.log(error));\n            })\n            .catch(error => { return this.handleError(error) });\n    }\n\n    public addGame(games: Game) {\n        console.log('game opslaan');\n        console.log(games.developer);\n        this.http.post(this.PostserverUrl + '/developer/' + games.developer + '/game', { imageUrl: games.imageUrl, name: games.name, releaseDate: games.releaseDate, genre: games.genre, description: games.description, developer: games.developer })\n            .toPromise()\n            .then(() => {\n                console.log(\"game toegevoegd\")\n                this.getGames()\n                    .then(\n                        games => {\n                            this.games = games\n                            this.gamesChanged.next(this.games.slice());\n                        }\n                    )\n                    .catch(error => console.log(error));\n            }\n            )\n            .catch(error => { return this.handleError(error) });\n    }\n\n    //\n    //\n    //\n    private handleError(error: any): Promise<any> {\n        console.log('handleError');\n        return Promise.reject(error.message || error);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers, URLSearchParams, Response } from '@angular/http';\nimport { environment } from '../../environments/environment';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs'; ///Observable\nimport { User } from '../models/user.model';\nimport { Login } from '../models/login.model';\nimport { Subject } from 'rxjs'; ///Subject\nimport { headersToString } from 'selenium-webdriver/http';\nimport { map, mapTo, tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class LoginService {\n\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n    private serverUrl = environment.serverUrl + '/authenticate'; // URL to web api\n    private users: User[] = [];\n    startedEditing = new Subject<number>();\n    usersChanged = new Subject<User[]>();\n    public token: String = null\n\n    constructor(private http: Http, private httpClient: HttpClient) {\n    }\n\n    public getUsers(): Promise<User[]> {\n        console.log('user ophalen van de server');\n        return this.http.get(this.serverUrl, { headers: this.headers })\n            .toPromise()\n            .then(response => {\n                console.dir(response.json());\n                this.users = response.json() as User[];\n                return this.users\n            })\n            .catch(error => {\n                return this.handleError(error);\n            });\n    }\n\n    public getUser(index: number): Promise<User> {\n        console.log('User ophalen met id');\n        return this.http.get(this.serverUrl + '/' + this.users[index]._id, { headers: this.headers })\n            .toPromise()\n            .then(response => {\n                console.dir(response.json());\n                return response.json() as User;\n            })\n            .catch(error => {\n                return this.handleError(error);\n            });\n    }\n\n    authenticateUser(user) {\n        let headers = new Headers();\n        headers.append('Content-type', 'application/json');\n        return this.http.post(this.serverUrl, user, { headers: this.headers })\n            .toPromise()\n            .then(response => {\n                console.dir(response.json());\n                return response.json() as User;\n            })\n            .catch(error => {\n                return this.handleError(error);\n            });\n    }\n\n    public loginUser(logins: Login) {\n        return this.httpClient.post(this.serverUrl, { username: logins.username, password: logins.password })\n            .pipe(tap((logins: any) => {\n                    this.token = logins.data.token\n                // // login successful if there's a jwt token in the response\n                // if (logins && logins.token) {\n                //     // store user details and jwt token in local storage to keep user logged in between page refreshes\n                //     localStorage.setItem('currentUser', JSON.stringify(logins));\n                // }\n            }));\n    }\n\n    isAuth() {\n        return this.token != null\n    }\n\n    signOut() {\n        this.token = null\n    }\n\n    private handleError(error: any): Promise<any> {\n        console.log('handleError');\n        return Promise.reject(error.message || error);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers, URLSearchParams, Response } from '@angular/http';\nimport { environment } from '../../environments/environment';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs'; ///Observable\nimport { User } from '../models/user.model';\nimport { Subject } from 'rxjs'; ///Subject\n\n@Injectable()\nexport class RegisterService {\n\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n    private serverUrl = environment.serverUrl + '/register'; // URL to web api\n    private userUrl = environment.serverUrl + '/user';\n    private users: User[] = [];\n    startedEditing = new Subject<number>();\n    usersChanged = new Subject<User[]>();\n\n    constructor(private http: Http) {\n\n    }\n\n    public getUsers(): Promise<User[]>{\n        console.log('user ophalen van de server');\n        return this.http.get(this.userUrl,{headers: this.headers })\n        .toPromise()\n        .then(response => {\n            console.dir(response.json());\n            this.users = response.json() as User[];\n            return this.users\n        })\n        .catch(error => {\n            return this.handleError(error);\n        });\n    }\n\n    public getUser(index: number): Promise<User> {\n        console.log('User ophalen met id');\n        return this.http.get(this.userUrl + '/' + this.users[index]._id, { headers: this.headers })\n            .toPromise()\n            .then(response => {\n                console.dir(response.json());\n                return response.json() as User;\n            })\n            .catch(error => {\n                return this.handleError(error);\n            });\n    }\n\n    // public getGames(): Promise<Game[]> {\n    //     console.log('Game ophalen van server');\n    //     return this.http.get(this.serverUrl, { headers: this.headers })\n    //         .toPromise()\n    //         .then(response => {\n    //             console.dir(response.json());\n    //             this.games = response.json() as Game[];\n    //             return this.games\n    //         })\n    //         .catch(error => {\n    //             return this.handleError(error);\n    //         });\n    // }\n\n    public addUser(users: User){\n        console.log('user aanmaken');\n        this.http.post(this.serverUrl, {username: users.username, password: users.password, firstname: users.firstname, lastname: users.lastname})\n        .toPromise()\n        .then(() => {\n            console.log(\"user toegevoegd\")\n            this.getUsers()\n            .then(\n                users => {\n                    this.users = users\n                    this.usersChanged.next(this.users.slice());\n                }\n            )\n            .catch(error => console.log(error));\n        })\n        .catch(error => {return this.handleError(error)});\n    }\n\n    // public addGame(games: Game) {\n    //     console.log('games opslaan');\n    //     this.http.post(this.serverUrl, { imageUrl: games.imageUrl, name: games.name, releaseDate: games.releaseDate, genre: games.genre, description: games.description })\n    //         .toPromise()\n    //         .then(() => {\n    //             console.log(\"games toegevoegd\")\n    //             this.getGames()\n    //                 .then(\n    //                     games => {\n    //                         this.games = games\n    //                         this.gamesChanged.next(this.games.slice());\n    //                     }\n    //                 )\n    //                 .catch(error => console.log(error));\n    //         })\n    //         .catch(error => { return this.handleError(error) });\n    // }\n\n    private handleError(error: any): Promise<any> {\n        console.log('handleError');\n        return Promise.reject(error.message || error);\n    }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000/api/v1'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}